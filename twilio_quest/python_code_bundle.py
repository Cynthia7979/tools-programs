"""
TwilioQuest Code Bundle
Python Initiation: Staff of Pythonic Knowledge
---------------------------------

What is TwilioQuest?
- It is a beginner-level, gamified coding tutorial which covers a number of programming languages.
  You can download the game from https://www.twilio.com/quest

What is this file used for? Why did you create it?
- As one who've been using Python for quite some time, I found the introduction to Python level too easy for me.
  So, I decided to elevate the difficulty myself by writing everything directly from Python Shell.
  This means I have to write code using inside a string using the .write() method, 
  as well as debugging it solely by referencing to error.txt which is generated by the game.
  To make it even more challenging, I tried to use as little indentations in generated files as possible.
  If you take a look at fizzbuzz.py, you'll see that I did everything I can to fit every codeblock into a one-liner.

How to use this script?
- First, change the value of CODE_DIR to the path of the directory which you'd like your code files to be stored in.
  After that, run the script! You'll find all necessary code files inside the directory you specified. 
  However, note that you will have to generate functions.py twice - read the comments in the code.

I don't want to generate it from scratch. Where can I see the code in its written form?
- python_generated_examples/ under this directory has everything you need in there.
  Note that the readability could still be low since I tried to squeeze things in a few lines.
  Also, functions.py is in its "initial" form, meaning you'll have to uncomment the second line and generate it again
  if you'd like to see the solution for the second and third functions.py puzzles.

It is built specifically for "speedrunning" the game, right?
- You may notice that once passed the first hacking challenge (a.k.a., salutation.py), 
  it becomes extremely easy to complete the rest of the level
  because the code is already in the folder and you simply have to click "HACK" to get the exp. 
  This is because I used a variation of this code to progress throuh the game myself,
  and after transferring it into a standalone file it retains its property of being convenient.

Can I use it to cheat my way through TwilioQuest, then?
- Yes, but I don't recommend that. TwilioQuest is there for you to learn a new skill.
  It is not competitive, and you won't get any benefits from reaching a very high level solely by copying code from the web.
  So, if your intention was to learn Python with TwilioQuest,
  I suggest using this script only as a reference, despite how convenient it is to skip everything.

I have a question about your code / I found a bug
- Create an Issue in this repository, or contact me at CynthiaWang7979@hotmail.com
"""

import os

CODE_DIR = None

def main():
    assert CODE_DIR != None, ValueError('Please change CODE_DIR to the path of the directory in which you want to store your code files in!')

    write('salutation.py', 'print("For the glory of Python!")')
    write('collect_input.py', 'import sys\nfor s in sys.argv[1:]: print(s)')
    write('strings.py', 'import sys\nprint(sys.argv[1].upper()+"!!!")')
    write('variables.py', 'favorite_robot="Cedric"\nmeaning_of_life=42')
    write('numbers.py', 'import sys\nfirst, second = [int(a) for a in sys.argv[1:3]\nresult_sum = first + second\nnresult_difference = first - second\nresult_product = first * second\nresult_quotient = first / second')
    write('branching.py', 'import sys\na, b = [int(i) for i in sys.argv[1:3]]\nif a+b <= 0: print("You have chosen the path of destitution.")\nelif a+b > 1 and a+b <= 100: print("You have chosen the path of plenty.")\nelse: print("You have chosen the path of excess")')
    write('fizzbuzz.py', 'import sys\nresponses = []\nfor num in sys.argv[1:]: responses.append(f"{\'fizz\' if int(num) % 3 == 0 else \'\'}{\'buzz\' if int(num) % 5 == 0 else \'\'}")\nfor i, r in enumerate(responses): print(f"{r if r!=\'\' else sys.argv[i+1]}")')
    write('booleans.py', 'import sys\npython_is_glorious, failure_is_option, proper_greeting = True, False, sys.argv[1]=="For the glory of Python!"')
    write('lists.py', 'order_of_succession = ["Isabelle", "Grace", "Charlotte", "LeBron", "Steve"]')
    write('list_iteration.py', 'import sys\nargs = sys.argv[1:]\nfor i, word in enumerate(args): print(f"{i+1}. {word}")')
    write('functions.py', 'def hail_friend(): print(f"Hail, friend!")')
    # Uncomment the next line after finishing the first part of the functions.py challenge, and run this file again.
    # write('functions.py', 'def hail_friend(friend): print(f"Hail, {friend}!")\ndef add_numbers(a, b): return a+b')
    write('citizen.py', 'class Citizen:\n  """Describes the class"""\n  greeting = "For the glory of Python!"\n  def __init__(self, first_name, last_name):\n    self.first_name, self.last_name = first_name, last_name\n  def full_name(self): return f"{self.first_name} {self.last_name}"\n')
    write('dictionaries.py', 'super_hero = {"name": "Miles Morales", "hero_name": "Spider-Man", "power_level": 9999}')

def write(filename, content):
    with open(os.path.join(CODE_DIR, filename), 'w') as f:
        f.write(content)

if __name__ == '__main__':
    main()
